% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculateTrackDensity.R
\name{calculateTrackDensity}
\alias{calculateTrackDensity}
\title{Calculate density of tracks}
\usage{
calculateTrackDensity(dataList, radius = 1)
}
\arguments{
\item{dataList}{list of a data frame (must include at a minimum - trace (track ID), x, y and frame (in real coords)) and a calibration data frame}

\item{radius}{numeric variable for search radius (in spatial units of the data)}
}
\value{
data frame
}
\description{
Calculate for each track, using its starting frame, what is the relative density of tracks.
We use a search radius to find how many tracks in the starting frame are neighbours of the track.
The number of neighbours is normalised to the search circle, so that a track in the corner of the image with 2 neighbours has a density of 8.
Code for calculating search area (intersection between search circle and the image border) is taken from
https://petrelharp.github.io/circle_rectangle_intersection/circle_rectangle_intersection.html
}
\examples{
xmlPath <- system.file("extdata", "ExampleTrackMateData.xml", package="TrackMateR")
tmObj <- readTrackMateXML(XMLpath = xmlPath)
tmObj <- correctTrackMateData(dataList = tmObj, xyscalar = 0.04)
tdDF <- calculateTrackDensity(dataList = tmObj, radius = 2)
}
