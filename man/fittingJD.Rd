% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fittingJD.R
\name{fittingJD}
\alias{fittingJD}
\title{Fitting jump distance (JD) data}
\usage{
fittingJD(
  df,
  mode = "ECDF",
  nPop = 1,
  init,
  units = c("um", "s"),
  timeRes = 1,
  breaks = 100
)
}
\arguments{
\item{df}{data frame with a column named jump of jump distances}

\item{mode}{string indicated ECDF (default) or hist (histogram)}

\item{nPop}{number of populations of diffusing species (1, 2 or 3)}

\item{init}{initialisation parameters for the nls fit for example list(D2 = 200,  D1 = 0.1) or list(D2 = 0.01,  D1=0.1, D3=10, D4=100)}

\item{units}{character vector to describe units (defaults are um, micrometres and  s, seconds)}

\item{timeRes}{time resolution per unit of jump. Frame interval is 0.5 s and jump interval is two steps, timeRes = 1.}

\item{breaks}{number of bins for histogram. With ECDF breaks can be high e.g. 100, for mode = "hist" they should be low, perhaps 30.}
}
\value{
ggplot
}
\description{
Jump Distances have been calculated for a given time lag.
They can be described by fitting curves to the data, either using a histogram or cumulative probability density function.
Firtting to a histogram is sensitive to binning parameters and ECDF performs better for general use.
The idea behind this analysis is given in:
- Weimann et al. (2013) A quantitative comparison of single-dye tracking analysis tools using Monte Carlo simulations. PloS One 8, e64287.
- Menssen & Mani (2019) A Jump-Distance-Based Parameter Inference Scheme for Particulate Trajectories, Biophysical Journal, 117: 1, 143-156.
The bulk of this code is taken from trackR by JuG
}
\examples{
xmlPath <- "~/Desktop/FakeTracks.xml"
datalist <- readTrackMateXML(XMLpath = xmlPath)
data <-  datalist[[1]]
data <- correctTrackMateData(data, xy = 0.04)
jdvec <- calculateJD(data, deltaT = 2)
jdDF <- data.frame(jump = jdvec)
fittingJD(df = jdDF, mode = "ECDF", nPop = 2, breaks = 100, timeRes = 0.06)
}
